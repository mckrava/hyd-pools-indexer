enum SwapType {
  BUY
  SELL
}

enum PoolOperationType {
  BUY
  SELL
}

type Account @entity {
  "Account pubkey"
  id: ID!
  transfersTo: [Transfer!] @derivedFrom(field: "to")
  transfersFrom: [Transfer!] @derivedFrom(field: "from")
}

type Transfer @entity {
  "TxId"
  id: ID!
  paraChainBlockHeight: Int!
  assetId: Int! @index
  extrinsicHash: String @index
  from: Account!
  to: Account!
  amount: BigInt!
  txFee: BigInt!
}

type LbpPool @entity {
  id: ID!
  account: Account!
  assetAId: Int!
  assetBId: Int!
  assetABalance: BigInt!
  assetBBalance: BigInt!
  createdAt: DateTime!
  createdAtParaBlock: Int!
  isDestroyed: Boolean
  destroyedAtParaBlock: Int
  startBlockNumber: Int
  endBlockNumber: Int
  fee: [Int]
  feeCollector: Account
  repayTarget: BigInt
  initialWeight: Int
  finalWeight: Int
  owner: Account
  historicalBlockPrices: [LbpPoolHistoricalPrice!]! @derivedFrom(field: "pool")
  historicalVolume: [LbpPoolHistoricalVolume!]! @derivedFrom(field: "pool")
  operations: [LbpPoolOperation!]! @derivedFrom(field: "pool")
}

type XykPool @entity {
  id: ID!
  account: Account!
  assetAId: Int!
  assetBId: Int!
  shareTokenId: Int!
  assetABalance: BigInt!
  assetBBalance: BigInt!
  initialSharesAmount: BigInt!
  createdAt: DateTime!
  createdAtParaBlock: Int!
  isDestroyed: Boolean
  destroyedAtParaBlock: Int
  historicalBlockPrices: [XykPoolHistoricalPrice!]! @derivedFrom(field: "pool")
  historicalVolume: [XykPoolHistoricalVolume!]! @derivedFrom(field: "pool")
  operations: [XykPoolOperation!]! @derivedFrom(field: "pool")
}

type HistoricalAssetVolume @entity {
  "AssetId-paraChainBlockHeight"
  id: ID!
  assetId: Int!
  volumeIn: BigInt!
  volumeOut: BigInt!
  totalVolumeIn: BigInt!
  totalVolumeOut: BigInt!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type LbpPoolHistoricalPrice @entity {
  "PoolId-paraChainBlockHeight"
  id: ID!
  pool: LbpPool!
  assetAId: Int!
  assetBId: Int!
  assetABalance: BigInt!
  assetBBalance: BigInt!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type XykPoolHistoricalPrice @entity {
  "PoolId-paraChainBlockHeight"
  id: ID!
  pool: XykPool!
  assetAId: Int!
  assetBId: Int!
  assetABalance: BigInt!
  assetBBalance: BigInt!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type LbpPoolHistoricalVolume @entity {
  "PoolId-paraChainBlockHeight"
  id: ID!
  pool: LbpPool!
  assetAId: Int!
  assetBId: Int!
  averagePrice: Float!
  assetAVolumeIn: BigInt!
  assetAVolumeOut: BigInt!
  assetATotalVolumeIn: BigInt!
  assetATotalVolumeOut: BigInt!
  assetAFee: BigInt!
  assetBFee: BigInt!
  assetATotalFees: BigInt!
  assetBTotalFees: BigInt!
  assetBVolumeIn: BigInt!
  assetBVolumeOut: BigInt!
  assetBTotalVolumeIn: BigInt!
  assetBTotalVolumeOut: BigInt!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type XykPoolHistoricalVolume @entity {
  "PoolId-paraChainBlockHeight"
  id: ID!
  pool: XykPool!
  assetAId: Int!
  assetBId: Int!
  averagePrice: Float!
  assetAVolumeIn: BigInt!
  assetAVolumeOut: BigInt!
  assetATotalVolumeIn: BigInt!
  assetATotalVolumeOut: BigInt!
  assetAFee: BigInt!
  assetBFee: BigInt!
  assetATotalFees: BigInt!
  assetBTotalFees: BigInt!
  assetBVolumeIn: BigInt!
  assetBVolumeOut: BigInt!
  assetBTotalVolumeIn: BigInt!
  assetBTotalVolumeOut: BigInt!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type LbpPoolOperation @entity {
  "TxId"
  id: ID!
  account: Account!
  extrinsicHash: String @index
  assetInId: Int!
  assetInAmount: BigInt!
  assetInFee: BigInt!
  assetOutId: Int!
  assetOutAmount: BigInt!
  assetOutFee: BigInt!
  swapPrice: Float!
  pool: LbpPool!
  type: PoolOperationType!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}

type XykPoolOperation @entity {
  "TxId"
  id: ID!
  account: Account!
  extrinsicHash: String @index
  assetInId: Int!
  assetInAmount: BigInt!
  assetInFee: BigInt!
  assetOutId: Int!
  assetOutAmount: BigInt!
  assetOutFee: BigInt!
  swapPrice: Float!
  pool: XykPool!
  type: PoolOperationType!
  relayChainBlockHeight: Int!
  paraChainBlockHeight: Int!
}
